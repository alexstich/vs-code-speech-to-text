{
  "name": "voice-scribe",
  "displayName": "VoiceScribe - Speech to Text",
  "description": "Transform speech to text using OpenAI Whisper API with seamless VS Code and Cursor IDE integration",
  "version": "0.1.0",
  "publisher": "voicescribe",
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/voice-scribe-extension"
  },
  "bugs": {
    "url": "https://github.com/yourusername/voice-scribe-extension/issues"
  },
  "homepage": "https://github.com/yourusername/voice-scribe-extension#readme",
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Productivity"
  ],
  "keywords": [
    "speech",
    "voice",
    "transcription",
    "whisper",
    "openai",
    "audio",
    "ai",
    "cursor",
    "dictation",
    "accessibility"
  ],
  "activationEvents": [
    "onCommand:voiceScribe.startRecording",
    "onCommand:voiceScribe.toggleRecording",
    "onCommand:voiceScribe.sendToChat"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "voiceScribe.startRecording",
        "title": "Start Voice Recording",
        "category": "VoiceScribe",
        "icon": "$(record)"
      },
      {
        "command": "voiceScribe.stopRecording",
        "title": "Stop Voice Recording",
        "category": "VoiceScribe",
        "icon": "$(record-stop)"
      },
      {
        "command": "voiceScribe.toggleRecording",
        "title": "Toggle Voice Recording",
        "category": "VoiceScribe",
        "icon": "$(mic)"
      },
      {
        "command": "voiceScribe.sendToChat",
        "title": "Record and Send to AI Chat",
        "category": "VoiceScribe",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "voiceScribe.insertAsComment",
        "title": "Record and Insert as Comment",
        "category": "VoiceScribe",
        "icon": "$(comment)"
      },
      {
        "command": "voiceScribe.openSettings",
        "title": "Open VoiceScribe Settings",
        "category": "VoiceScribe",
        "icon": "$(settings-gear)"
      }
    ],
    "keybindings": [
      {
        "command": "voiceScribe.toggleRecording",
        "key": "F9",
        "when": "editorTextFocus || terminalFocus"
      },
      {
        "command": "voiceScribe.startRecording",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "editorTextFocus"
      },
      {
        "command": "voiceScribe.sendToChat",
        "key": "ctrl+shift+alt+v",
        "mac": "cmd+shift+alt+v",
        "when": "true"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "voiceScribe.toggleRecording",
          "group": "voiceScribe",
          "when": "editorTextFocus"
        },
        {
          "command": "voiceScribe.insertAsComment",
          "group": "voiceScribe",
          "when": "editorTextFocus"
        }
      ],
      "commandPalette": [
        {
          "command": "voiceScribe.startRecording",
          "when": "true"
        },
        {
          "command": "voiceScribe.stopRecording",
          "when": "voiceScribe.isRecording"
        },
        {
          "command": "voiceScribe.toggleRecording",
          "when": "true"
        },
        {
          "command": "voiceScribe.sendToChat",
          "when": "true"
        },
        {
          "command": "voiceScribe.insertAsComment",
          "when": "editorTextFocus"
        },
        {
          "command": "voiceScribe.openSettings",
          "when": "true"
        }
      ]
    },
    "configuration": {
      "title": "VoiceScribe",
      "properties": {
        "voiceScribe.apiKey": {
          "type": "string",
          "description": "OpenAI API Key for Whisper transcription",
          "scope": "application",
          "order": 1
        },
        "voiceScribe.language": {
          "type": "string",
          "default": "auto",
          "description": "Language for transcription (auto-detect if 'auto')",
          "enum": [
            "auto",
            "en",
            "ru",
            "es",
            "fr",
            "de",
            "it",
            "pt",
            "zh",
            "ja",
            "ko"
          ],
          "enumDescriptions": [
            "Auto-detect language",
            "English",
            "Russian",
            "Spanish",
            "French",
            "German",
            "Italian",
            "Portuguese",
            "Chinese",
            "Japanese",
            "Korean"
          ],
          "order": 2
        },
        "voiceScribe.recordingMode": {
          "type": "string",
          "enum": [
            "hold",
            "toggle"
          ],
          "default": "hold",
          "description": "Recording mode: hold button or toggle on/off",
          "order": 3
        },
        "voiceScribe.insertMode": {
          "type": "string",
          "enum": [
            "cursor",
            "comment",
            "replace",
            "preview"
          ],
          "default": "cursor",
          "description": "How to insert transcribed text",
          "enumDescriptions": [
            "Insert at cursor position",
            "Insert as comment",
            "Replace selected text",
            "Show preview dialog"
          ],
          "order": 4
        },
        "voiceScribe.audioQuality": {
          "type": "string",
          "enum": [
            "standard",
            "high"
          ],
          "default": "standard",
          "description": "Audio recording quality",
          "order": 5
        },
        "voiceScribe.enableCursorIntegration": {
          "type": "boolean",
          "default": true,
          "description": "Enable special integration with Cursor IDE AI chat",
          "order": 6
        },
        "voiceScribe.showStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show recording status in status bar",
          "order": 7
        },
        "voiceScribe.autoDetectContext": {
          "type": "boolean",
          "default": true,
          "description": "Automatically detect IDE context (editor, chat, terminal)",
          "order": 8
        },
        "voiceScribe.maxRecordingDuration": {
          "type": "number",
          "default": 60,
          "minimum": 5,
          "maximum": 300,
          "description": "Maximum recording duration in seconds",
          "order": 9
        }
      }
    }
  },
  "scripts": {
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "compile-tests": "tsc -p . --outDir out",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "test": "vscode-test",
    "test:unit": "npm run pretest && nyc mocha out/test/unit/**/*.test.js",
    "test:integration": "npm run pretest && nyc mocha out/test/integration/**/*.test.js",
    "test:coverage": "npm run pretest && nyc --reporter=html --reporter=text mocha out/test/**/*.test.js",
    "test:watch": "npm run compile-tests && mocha --watch out/test/**/*.test.js",
    "coverage:report": "nyc report --reporter=html --reporter=text",
    "coverage:check": "nyc check-coverage --lines 80 --functions 80 --branches 70 --statements 80",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "watch": "tsc -watch -p .",
    "package": "vsce package"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/mocha": "^10.0.10",
    "@types/nock": "^10.0.3",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "mocha": "^11.5.0",
    "nock": "^14.0.4",
    "npm-run-all": "^4.1.5",
    "nyc": "^17.1.0",
    "sinon": "^20.0.0",
    "source-map-support": "^0.5.21",
    "typescript": "^5.8.3"
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "include": [
      "out/core/**/*.js",
      "out/ui/**/*.js",
      "out/utils/**/*.js",
      "out/integrations/**/*.js"
    ],
    "exclude": [
      "out/test/**/*.js",
      "out/**/*.test.js",
      "out/mocks/**/*.js"
    ],
    "reporter": [
      "text",
      "html",
      "lcov"
    ],
    "all": true,
    "check-coverage": true,
    "lines": 80,
    "statements": 80,
    "functions": 80,
    "branches": 70
  }
}
