---
description: Watch this rule if you want to make or run tests
globs: 
alwaysApply: false
---
# Testing Guide –¥–ª—è VS Code Speech-to-Text Extension

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–æ–≤

–¢–µ—Å—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:
- `src/test/unit/` - Unit —Ç–µ—Å—Ç—ã –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π  
- `src/test/integration/` - Integration —Ç–µ—Å—Ç—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ workflow
- `src/test/mocks/` - –ú–æ–∫–∏ –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö API
- `src/test/fixtures/` - –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ fixtures

## üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:
- [.mocharc.json](mdc:.mocharc.json) - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Mocha (TDD UI, timeout, setup)
- [package.json](mdc:package.json) - –°–∫—Ä–∏–ø—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ nyc –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- [src/test/setup.ts](mdc:src/test/setup.ts) - –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã

### –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:
```bash
npm run test:unit        # Unit —Ç–µ—Å—Ç—ã
npm run test:integration # Integration —Ç–µ—Å—Ç—ã  
npm run test:coverage    # –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
npm run test:watch       # –¢–µ—Å—Ç—ã –≤ watch —Ä–µ–∂–∏–º–µ
npm run coverage:check   # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è (80% –ø–æ—Ä–æ–≥)
```

## üé≠ –ú–æ–∫–∏ –∏ –∑–∞–≥–ª—É—à–∫–∏

### Web Audio API –º–æ–∫–∏ - [webAudioMocks.ts](mdc:src/test/mocks/webAudioMocks.ts):
- `MockMediaRecorder` - –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏–æ
- `MockMediaStream` - –¥–ª—è –º–µ–¥–∏–∞ –ø–æ—Ç–æ–∫–æ–≤
- `MockBlob`, `MockFormData` - –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
- `setupWebAudioMocks()` / `cleanupWebAudioMocks()` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞/–æ—á–∏—Å—Ç–∫–∞

### VS Code API –º–æ–∫–∏ - [vscodeMocks.ts](mdc:src/test/mocks/vscodeMocks.ts):
- `mockVscode` - –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç VS Code API
- `setActiveEditor(language)` - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
- `setupVSCodeMocks()` / `resetVSCodeMocks()` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞/—Å–±—Ä–æ—Å

### –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - [testData.ts](mdc:src/test/fixtures/testData.ts):
- `testApiResponses` - –æ—Ç–≤–µ—Ç—ã OpenAI API
- `testUserSettings` - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- `testLanguageConfigs` - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤

## ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤

### –®–∞–±–ª–æ–Ω Unit —Ç–µ—Å—Ç–∞:
```typescript
import * as assert from 'assert';
import * as sinon from 'sinon';
import { YourModule } from '../../path/to/YourModule';
import { setupWebAudioMocks, cleanupWebAudioMocks } from '../mocks/webAudioMocks';
import { setupVSCodeMocks, resetVSCodeMocks } from '../mocks/vscodeMocks';

suite('YourModule Unit Tests', () => {
    let yourModule: YourModule;
    let clock: sinon.SinonFakeTimers;

    setup(() => {
        setupWebAudioMocks();
        setupVSCodeMocks(); 
        clock = sinon.useFakeTimers();
        yourModule = new YourModule();
    });

    teardown(() => {
        cleanupWebAudioMocks();
        resetVSCodeMocks();
        clock.restore();
        sinon.restore();
    });

    suite('Method Tests', () => {
        test('Should do something', async () => {
            // Arrange
            const expectedResult = 'expected';
            
            // Act
            const result = await yourModule.doSomething();
            
            // Assert
            assert.strictEqual(result, expectedResult);
        });
    });
});
```

### –®–∞–±–ª–æ–Ω Integration —Ç–µ—Å—Ç–∞:
```typescript
import * as assert from 'assert';
import * as sinon from 'sinon';
import { setupWebAudioMocks, cleanupWebAudioMocks, createMockApiResponse } from '../mocks/webAudioMocks';
import { setupVSCodeMocks, resetVSCodeMocks, setActiveEditor } from '../mocks/vscodeMocks';

suite('Integration Tests', () => {
    setup(() => {
        setupWebAudioMocks();
        setupVSCodeMocks();
    });

    teardown(() => {
        cleanupWebAudioMocks();
        resetVSCodeMocks();
        sinon.restore();
    });

    test('Should complete full workflow', async () => {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        const editor = setActiveEditor('javascript');
        const fetchStub = (global as any).fetch;
        fetchStub.resolves(createMockApiResponse('Test result'));
        
        // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ workflow
        // ...
        
        assert.ok(true);
    });
});
```

## üéØ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ—Å—Ç—ã

### Unit —Ç–µ—Å—Ç—ã:
- [AudioRecorder.test.ts](mdc:src/test/unit/AudioRecorder.test.ts) - 13 —Ç–µ—Å—Ç–æ–≤ ‚úÖ
- [WhisperClient.test.ts](mdc:src/test/unit/WhisperClient.test.ts) - 17 —Ç–µ—Å—Ç–æ–≤ ‚úÖ  
- [StatusBarManager.test.ts](mdc:src/test/unit/StatusBarManager.test.ts) - 10 —Ç–µ—Å—Ç–æ–≤ ‚úÖ
- [TextInserter.test.ts](mdc:src/test/unit/TextInserter.test.ts) - 22 —Ç–µ—Å—Ç–∞ (—Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏)

### Integration —Ç–µ—Å—Ç—ã:
- [extension.integration.test.ts](mdc:src/test/integration/extension.integration.test.ts) - 12 —Ç–µ—Å—Ç–æ–≤ ‚úÖ

## üîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é

### –ß—Ç–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:
1. **–û—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å** - –∑–∞–ø–∏—Å—å, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è, –≤—Å—Ç–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
2. **Error handling** - –æ—à–∏–±–∫–∏ API, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞, –Ω–µ–≤–µ—Ä–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
3. **Edge cases** - –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ, –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã, timeout'—ã
4. **VS Code integration** - –∫–æ–º–∞–Ω–¥—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
5. **Multi-language support** - —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏

### –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `sinon.SinonFakeTimers` –¥–ª—è timeout'–æ–≤
- –ú–æ–∫–∞–π—Ç–µ –≤–Ω–µ—à–Ω–∏–µ API (fetch, getUserMedia)
- –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–∞–∫ —É—Å–ø–µ—à–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, —Ç–∞–∫ –∏ –æ—à–∏–±–∫–∏
- –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π —á–µ—Ä–µ–∑ `sinon.SinonStub`
- –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –ø–æ–∫—Ä—ã—Ç–∏—é 80%+ (–Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ nyc)

### –û—Ç–ª–∞–¥–∫–∞ —Ç–µ—Å—Ç–æ–≤:
```bash
# –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
npx mocha out/test/unit/AudioRecorder.test.js

# –ó–∞–ø—É—Å–∫ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
npx mocha out/test/unit/AudioRecorder.test.js --reporter=tap

# –ö–æ–º–ø–∏–ª—è—Ü–∏—è –±–µ–∑ –∑–∞–ø—É—Å–∫–∞
npm run compile-tests
```

## üìä –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞

–¶–µ–ª–∏ –ø–æ–∫—Ä—ã—Ç–∏—è (–Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ [package.json](mdc:package.json)):
- **Lines**: 80%
- **Statements**: 80%  
- **Functions**: 80%
- **Branches**: 70%

–û—Ç—á–µ—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ `coverage/` –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ `npm run test:coverage`.
